@page "/chat"
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager Navigation
@implements IAsyncDisposable

<PageTitle>Chat</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Chat</MudText>

<EditForm Model="@this" OnValidSubmit="Send">
    <DataAnnotationsValidator />

    <MudTextField Label="User" Variant="@Variant.Outlined" Class="mb-2" @bind-Value="User" For="() => User" />

    <MudTextField Label="Message" Variant="@Variant.Outlined" Class="mb-2" @bind-Value="Message" For="() => Message" Lines="3" />

    <MudButton ButtonType="@ButtonType.Submit" Variant="@Variant.Text" StartIcon="@Icons.Material.Filled.Send" Disabled="@(!IsConnected)">Send</MudButton>
</EditForm>

<MudList>
    @foreach (var message in messages)
    {
        <MudListItem>@message</MudListItem>
    }
</MudList>

@code {
    private List<string> messages = new List<string>();

    [Required]
    public string? User { get; set; }

    [Required]
    [MaxLength(50)]
    public string? Message { get; set; }

    private async Task Send()
    {
        if (hubConnection is not null)
        {
            await hubProxy.SendMessage(User!, Message!);
        }
    }

    public Task ReceiveMessage(string user, string message) 
    {
        var encodedMsg = $"{user}: {message}";
        messages.Add(encodedMsg);
        
        StateHasChanged();

        return Task.CompletedTask;
    }
}
